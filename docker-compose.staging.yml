version: "3.9"

# USDX/Wexel Staging Environment
# Simplified configuration for testing deployment on DigitalOcean

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: usdx-db-staging
    restart: unless-stopped
    environment:
      POSTGRES_USER: usdx_staging
      POSTGRES_PASSWORD: staging_pass_2024
      POSTGRES_DB: usdx_wexel_staging
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usdx_staging"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staging_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: usdx-redis-staging
    restart: unless-stopped
    command: redis-server --requirepass staging_redis_2024
    volumes:
      - redis_staging_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - staging_network

  # Backend/Indexer Application
  indexer:
    image: usdx-wexel-indexer:latest
    container_name: usdx-indexer-staging
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: staging
      DATABASE_URL: postgresql://usdx_staging:staging_pass_2024@db:5432/usdx_wexel_staging
      REDIS_URL: redis://default:staging_redis_2024@redis:6379
      JWT_SECRET: staging_jwt_secret_change_in_production_2024
      ADMIN_JWT_SECRET: staging_admin_jwt_secret_2024
      API_PORT: 3001
      CORS_ORIGIN: "*"

      # Solana Configuration (Devnet for staging)
      SOLANA_RPC_URL: https://api.devnet.solana.com
      SOLANA_WEBSOCKET_URL: wss://api.devnet.solana.com
      SOLANA_POOL_PROGRAM_ID: placeholder_pool_program
      SOLANA_WEXEL_NFT_PROGRAM_ID: placeholder_wexel_program
      SOLANA_REWARDS_PROGRAM_ID: placeholder_rewards_program
      SOLANA_COLLATERAL_PROGRAM_ID: placeholder_collateral_program
      SOLANA_ORACLE_PROGRAM_ID: placeholder_oracle_program
      SOLANA_MARKETPLACE_PROGRAM_ID: placeholder_marketplace_program
      SOLANA_BOOST_MINT_ADDRESS: placeholder_boost_mint

      # Tron Configuration (Nile testnet for staging)
      TRON_GRID_API_KEY: placeholder_trongrid_api_key
      TRON_NETWORK: nile
      TRON_DEPOSIT_VAULT_ADDRESS: placeholder_vault_address
      TRON_PRICE_FEED_ADDRESS: placeholder_price_feed
      TRON_BRIDGE_PROXY_ADDRESS: placeholder_bridge_proxy
      TRON_USDT_ADDRESS: TXlaQadyoKuR4C198dM8f3Mxe3zPPnt5p8

      # Oracles (placeholders for staging)
      PYTH_PRICE_FEED_ID: placeholder_pyth_feed
      CHAINLINK_PRICE_FEED_ADDRESS: placeholder_chainlink_feed

      # Security (staging values)
      ADMIN_MULTISIG_ADDRESS: placeholder_multisig
      PAUSE_GUARDIAN_ADDRESS: placeholder_guardian
      TIMELOCK_ADDRESS: placeholder_timelock

      # Monitoring and Notifications (optional for staging - commented out to allow undefined)
      # SENTRY_DSN: ""
      # NOTIFICATION_WEBHOOK_URL: ""
      # EMAIL_API_KEY: ""
      # SMS_API_KEY: ""
      # TELEGRAM_BOT_TOKEN: ""
      # TELEGRAM_CHAT_ID: ""
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - staging_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend Web Application
  webapp:
    image: usdx-wexel-webapp:latest
    container_name: usdx-webapp-staging
    restart: unless-stopped
    depends_on:
      - indexer
    environment:
      NODE_ENV: staging
      NEXT_PUBLIC_API_URL: http://159.203.114.210:3001
      NEXT_PUBLIC_WS_URL: ws://159.203.114.210:3001
      NEXT_PUBLIC_SOLANA_NETWORK: devnet
      NEXT_PUBLIC_TRON_NETWORK: nile
      NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: placeholder_walletconnect_id
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - staging_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  staging_network:
    driver: bridge

volumes:
  postgres_staging_data:
  redis_staging_data:
